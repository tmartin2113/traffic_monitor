# ============================================================================
# 511 Bay Area Traffic Monitor - Environment Configuration Template
# ============================================================================
# 
# SETUP INSTRUCTIONS:
# 1. Copy this file: cp .env.example .env
# 2. Replace placeholder values with your actual configuration
# 3. Never commit .env to version control (it's in .gitignore)
# 4. Update .env.example when adding new environment variables
# 5. Validate your configuration using the commands at the bottom
#
# SECURITY WARNING:
# - Never hardcode API keys in source code
# - Never commit .env files to git
# - Never share .env files publicly
# - Use your platform's secret management for production
#
# ============================================================================

# ============================================================================
# REQUIRED CONFIGURATION
# ============================================================================

# 511.org API Key (REQUIRED)
# Get your free API key at: https://511.org/open-data/token
# This is the primary data source for Bay Area traffic events
# 
# IMPORTANT: No quotes, no spaces around the = sign
# CORRECT:   VITE_511_API_KEY=abc123xyz789
# INCORRECT: VITE_511_API_KEY="abc123xyz789"
# INCORRECT: VITE_511_API_KEY = abc123xyz789
VITE_511_API_KEY=your_api_key_here

# ============================================================================
# API CONFIGURATION
# ============================================================================

# API Base URL
# Default: https://api.511.org
# Only change if using a proxy or different endpoint
VITE_API_BASE_URL=https://api.511.org

# API Request Timeout (milliseconds)
# How long to wait for API responses before timing out
# Default: 30000 (30 seconds)
# Recommended range: 10000-60000
VITE_API_TIMEOUT=30000

# Maximum API Retry Attempts
# Number of times to retry failed API requests
# Default: 3
# Recommended range: 1-5
VITE_API_MAX_RETRIES=3

# ============================================================================
# APPLICATION SETTINGS
# ============================================================================

# Application Metadata
# These values appear in the browser tab, PWA manifest, and SEO
VITE_APP_TITLE=511 Bay Area Traffic Monitor
VITE_APP_VERSION=3.0.0
VITE_APP_DESCRIPTION=Real-time traffic monitoring for the San Francisco Bay Area

# Environment
# Options: development | staging | production
# This affects logging verbosity and error handling behavior
VITE_APP_ENVIRONMENT=development

# ============================================================================
# DATA REFRESH & CACHING
# ============================================================================

# Polling Interval (milliseconds)
# How often to fetch new data from the API
# Default: 60000 (60 seconds / 1 minute)
# 
# Considerations:
# - 511.org rate limit: 60 requests per hour
# - Minimum recommended: 30000 (30 seconds) → 120 requests/hour
# - Maximum recommended: 300000 (5 minutes) → 12 requests/hour
# - For development/testing: 60000-120000
# - For production: 60000
VITE_POLL_INTERVAL=60000

# Cache Time-To-Live (milliseconds)
# How long to keep cached data before refetching
# Default: 30000 (30 seconds)
# 
# Considerations:
# - Should be less than POLL_INTERVAL
# - Reduces API calls for rapid page refreshes
# - Recommended: 25%-50% of POLL_INTERVAL
VITE_CACHE_TTL=30000

# Stale Time (milliseconds)
# How long before cached data is considered stale
# Default: 60000 (1 minute)
# Used by @tanstack/react-query for stale-while-revalidate pattern
VITE_STALE_TIME=60000

# ============================================================================
# RATE LIMITING
# ============================================================================

# Rate Limit: Maximum Requests
# Maximum number of API requests allowed per window
# Default: 60 (matches 511.org's limit)
# DO NOT increase beyond 60 or you'll get 429 errors from 511.org
VITE_RATE_LIMIT_MAX_REQUESTS=60

# Rate Limit: Time Window (milliseconds)
# Time window for rate limiting
# Default: 3600000 (1 hour)
# Must match 511.org's rate limit window
VITE_RATE_LIMIT_WINDOW=3600000

# Rate Limit: Warning Threshold
# Show warning when requests remaining drops below this
# Default: 10
VITE_RATE_LIMIT_WARNING_THRESHOLD=10

# ============================================================================
# MAP CONFIGURATION
# ============================================================================

# Map Center (San Francisco)
# Default coordinates for map center on initial load
VITE_MAP_CENTER_LAT=37.7749
VITE_MAP_CENTER_LNG=-122.4194

# Map Default Zoom Level
# OpenStreetMap zoom level (0-18)
# Default: 10 (shows entire Bay Area)
# Recommended range: 8-12
VITE_MAP_DEFAULT_ZOOM=10

# Map Min/Max Zoom Levels
# Restrict zoom range to prevent excessive tile loading
VITE_MAP_MIN_ZOOM=8
VITE_MAP_MAX_ZOOM=16

# Marker Clustering
# Enable clustering for better performance with many markers
# Options: true | false
VITE_MAP_ENABLE_CLUSTERING=true

# Cluster Distance (pixels)
# Distance in pixels to group markers into clusters
# Default: 80
# Lower value = more clusters, Higher value = fewer clusters
VITE_MAP_CLUSTER_DISTANCE=80

# ============================================================================
# GEOFENCE CONFIGURATION
# ============================================================================

# Bay Area Bounding Box
# Coordinates defining the monitored area
# Default values cover the 9-county Bay Area
# 
# To find custom coordinates:
# 1. Visit http://boundingbox.klokantech.com/
# 2. Draw your area on the map
# 3. Copy CSV format coordinates
# 4. Use format: xmin,ymin,xmax,ymax

VITE_GEOFENCE_XMIN=-122.57031250
VITE_GEOFENCE_YMIN=37.21559028
VITE_GEOFENCE_XMAX=-121.66525694
VITE_GEOFENCE_YMAX=37.86217361

# ============================================================================
# FEATURE FLAGS
# ============================================================================

# Enable/disable specific features
# Options for each: true | false

# Enable offline support with Service Worker
VITE_FEATURE_OFFLINE_SUPPORT=true

# Enable real-time WebSocket updates (future feature)
VITE_FEATURE_WEBSOCKET=false

# Enable analytics and error tracking
VITE_FEATURE_ANALYTICS=true

# Enable debug mode (verbose logging)
VITE_FEATURE_DEBUG_MODE=false

# ============================================================================
# ANALYTICS & MONITORING (Optional)
# ============================================================================

# Google Analytics (Optional)
# Get tracking ID at: https://analytics.google.com
# VITE_GA_TRACKING_ID=G-XXXXXXXXXX

# Sentry Error Tracking (Optional)
# Get DSN at: https://sentry.io
# VITE_SENTRY_DSN=https://xxxxx@xxxxx.ingest.sentry.io/xxxxx
# VITE_SENTRY_ENVIRONMENT=production
# VITE_SENTRY_TRACES_SAMPLE_RATE=0.1

# Datadog RUM (Optional)
# Get credentials at: https://www.datadoghq.com
# VITE_DATADOG_APPLICATION_ID=your_app_id
# VITE_DATADOG_CLIENT_TOKEN=your_client_token
# VITE_DATADOG_SITE=datadoghq.com
# VITE_DATADOG_SERVICE=511-traffic-monitor
# VITE_DATADOG_ENV=production

# New Relic Browser (Optional)
# Get credentials at: https://newrelic.com
# VITE_NEW_RELIC_ACCOUNT_ID=your_account_id
# VITE_NEW_RELIC_TRUST_KEY=your_trust_key
# VITE_NEW_RELIC_AGENT_ID=your_agent_id
# VITE_NEW_RELIC_LICENSE_KEY=your_license_key
# VITE_NEW_RELIC_APPLICATION_ID=your_app_id

# ============================================================================
# DEVELOPMENT SETTINGS (Only used in development mode)
# ============================================================================

# Development Server Configuration
VITE_DEV_SERVER_PORT=3000
VITE_DEV_SERVER_HOST=localhost
VITE_DEV_SERVER_OPEN=true

# Mock Data (Development Only)
# Use mock data instead of real API calls for faster development
# Options: true | false
VITE_DEV_MOCK_DATA=false

# Hot Module Replacement
# Enable HMR for instant updates during development
# Options: true | false
VITE_DEV_HMR=true

# Strict Mode
# Enable React Strict Mode for additional checks
# Options: true | false
VITE_DEV_STRICT_MODE=true

# ============================================================================
# BUILD CONFIGURATION (Only used during build)
# ============================================================================

# Source Maps
# Enable source maps for production builds (helpful for debugging)
# Options: true | false
# WARNING: Exposes source code, disable for security-sensitive apps
VITE_BUILD_SOURCEMAP=false

# Code Minification
# Minify JavaScript and CSS in production builds
# Options: true | false
VITE_BUILD_MINIFY=true

# Legacy Browser Support
# Build legacy bundles for older browsers (IE11, older Safari)
# Options: true | false
# Note: Increases bundle size by ~20%
VITE_BUILD_LEGACY=false

# Build Output Directory
# Where to output production build files
# Default: dist
VITE_BUILD_OUTPUT_DIR=dist

# Asset Inline Limit (bytes)
# Files smaller than this will be inlined as base64
# Default: 4096 (4KB)
# Reduces HTTP requests but increases bundle size
VITE_BUILD_ASSET_INLINE_LIMIT=4096

# ============================================================================
# PRODUCTION OVERRIDES
# ============================================================================
# These values are typically set in your CI/CD pipeline or hosting platform
# Examples for Vercel, Netlify, Railway, etc.

# Build Information (Auto-populated by CI/CD)
# These are injected at build time by your deployment platform
# VITE_BUILD_TIME=${BUILD_TIME}
# VITE_COMMIT_SHA=${COMMIT_SHA}
# VITE_BRANCH=${BRANCH}
# VITE_BUILD_NUMBER=${BUILD_NUMBER}

# ============================================================================
# VALIDATION COMMANDS
# ============================================================================
# Run these commands after configuration to ensure everything works

# 1. Validate API Key
# Copy and paste this command, replacing YOUR_KEY with your actual key:
# curl "https://api.511.org/traffic/events?api_key=YOUR_KEY&limit=1"
#
# Expected response should start with:
# {"events":[{"id":"...
#
# Error responses:
# - 401 Unauthorized: Invalid API key
# - 429 Too Many Requests: Rate limit exceeded (wait 1 hour)
# - Connection errors: Check your internet connection

# 2. Validate Environment Variables are Loaded
# After starting the dev server, open browser console (F12) and run:
# console.log(import.meta.env)
#
# Expected: You should see all VITE_ prefixed variables
# Note: NEVER log sensitive values in production

# 3. Check TypeScript Configuration
# Run this to ensure no type errors:
# npm run type-check
#
# Expected: No errors, should exit with code 0

# 4. Verify Rate Limiting Configuration
# Check that rate limit math is correct:
# node -e "console.log('Max requests per hour:', process.env.VITE_RATE_LIMIT_MAX_REQUESTS || 60)"
# node -e "console.log('Window in hours:', (parseInt(process.env.VITE_RATE_LIMIT_WINDOW || 3600000) / 3600000).toFixed(2))"

# 5. Test Polling Interval
# Ensure polling interval respects rate limits:
# node -e "const interval = parseInt(process.env.VITE_POLL_INTERVAL || 60000); const requestsPerHour = 3600000 / interval; console.log('Requests per hour with this interval:', requestsPerHour.toFixed(2)); if(requestsPerHour > 60) console.warn('WARNING: Will exceed rate limit!');"

# ============================================================================
# TROUBLESHOOTING
# ============================================================================

# Problem: "API key is invalid"
# Solution: 
# 1. Verify key is correct (no extra spaces/quotes)
# 2. Test directly: curl "https://api.511.org/traffic/events?api_key=YOUR_KEY&limit=1"
# 3. Request new key at https://511.org/open-data/token

# Problem: "Environment variables not loading"
# Solution:
# 1. Ensure filename is exactly ".env" (not ".env.txt")
# 2. Restart dev server after changing .env
# 3. Verify variables start with VITE_ prefix
# 4. Check .env is in project root (same directory as package.json)

# Problem: "Rate limit exceeded immediately"
# Solution:
# 1. Clear localStorage: localStorage.clear() in browser console
# 2. Check VITE_POLL_INTERVAL isn't too low (<30000)
# 3. Wait for rate limit to reset (check UI footer for reset time)

# Problem: "Build fails with environment errors"
# Solution:
# 1. Run validation: npm run type-check
# 2. Check all required variables are set
# 3. Ensure no syntax errors in .env file
# 4. Verify environment variables in your deployment platform

# ============================================================================
# NOTES
# ============================================================================

# 1. All variables prefixed with VITE_ are exposed to the client-side code
#    Do NOT put truly sensitive secrets here (use server-side env vars instead)

# 2. Never put sensitive data (passwords, private keys) in .env files
#    Use your hosting platform's environment variable settings instead

# 3. Keep .env.example updated when adding new variables
#    This helps other developers understand required configuration

# 4. Document all variables with comments for team members
#    Future you will thank present you

# 5. Use validation in your code to ensure required variables are set
#    See src/config/env.ts for Zod schema validation

# 6. Different environments should use different .env files:
#    - .env.development (local development)
#    - .env.staging (staging server)
#    - .env.production (production server - use platform secrets)

# 7. For local testing with different configs:
#    cp .env.example .env.local
#    Edit .env.local with your test values
#    .env.local takes precedence over .env

# ============================================================================
# END OF CONFIGURATION
# ============================================================================
